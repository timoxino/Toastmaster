name: Build, Test, Image and Deploy

on:
  push:
    branches: [ "release/**" ]
    tags:
      - 'v*'

env:
  PROJECT_ID: timoxino
  GAR_LOCATION: us-central1-docker.pkg.dev
  SERVICE: toastmaster
  APPLICATION: interview
  REGION: us-central1

jobs:
  
  build-and-deploy:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Pre-construct Terraform Init
        working-directory: ./terraform/module-pre-construct
        run: terraform init

      - name: Pre-construct Terraform Plan
        working-directory: ./terraform/module-pre-construct
        run: terraform plan

      - name: Pre-construct Terraform Destroy
        working-directory: ./terraform/module-pre-construct
        run: terraform destroy -auto-approve

      - name: Pre-construct Terraform Apply
        working-directory: ./terraform/module-pre-construct
        run: terraform apply -auto-approve

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}'

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.APPLICATION }}/${{ env.SERVICE }}" ./
          docker push "${{ env.GAR_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.APPLICATION }}/${{ env.SERVICE }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.APPLICATION }}/${{ env.SERVICE }}
          secrets: |
            spring.mail.username=toastmaster-spring-mail-username:latest
            spring.mail.password=toastmaster-spring-mail-password:latest
            toastmaster.email.from=toastmaster-email-from:latest
            toastmaster.email.to=toastmaster-email-to:latest
          env_vars: |
            spring.profiles.active=cloudrun
          flags: '--min-instances=1 --max-instances=1'

      - name: Post-construct Terraform Init
        working-directory: ./terraform/module-post-construct
        run: terraform init
  
      - name: Post-construct Terraform Plan
        working-directory: ./terraform/module-post-construct
        run: terraform plan

      - name: Post-construct Terraform Destroy
        working-directory: ./terraform/module-post-construct
        run: terraform destroy -auto-approve

      - name: Post-construct Terraform Apply
        working-directory: ./terraform/module-post-construct
        run: terraform apply -auto-approve